<?xml version="1.0" encoding="UTF-8"?>
<!-- Top-level POM for Java-CSML library -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<!-- We inherit from oss-parent so we can deploy to sonatype.org -->
	<!-- <parent> <groupId>org.sonatype.oss</groupId> <artifactId>oss-parent</artifactId> 
		<version>7</version> </parent> -->
	<modelVersion>4.0.0</modelVersion>
	<groupId>uk.ac.rdg.resc</groupId>
	<version>0.1-SNAPSHOT</version>
	<artifactId>edal-multiglobe-desktop</artifactId>
	<name>EDAL Multiglobe Desktop Client</name>
	<packaging>jar</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- Enables auto-insertion of licence in new source code files. Could 
			be extracted to a separate settings file, as per http://mevenide.codehaus.org/m2-site/mevenide2-netbeans/customizations.html -->
		<netbeans.hint.license>bsd-3clause</netbeans.hint.license>
		<edal-version>1.0-SNAPSHOT</edal-version>
	</properties>

	<url>https://bitbucket.org/GuyGriffiths/edal-multiglobe-desktop</url>
	<inceptionYear>2014</inceptionYear>
	<description>EDAL Multiglobe Desktop Client is a desktop client based on NASA WorldWind and the ReSC EDAL libraries.  It aims to display environment data on multiple synched globes for use on desktop machines and video walls</description>
	<organization>
		<name>Reading e-Science Centre, University of Reading, UK</name>
		<url>http://www.resc.reading.ac.uk</url>
	</organization>
	<licenses>
		<license>
			<url>http://edal-java.googlecode.com/hg/licence.txt</url>
			<name>Modified BSD licence</name>
			<comments>Permits redistribution and use in source and binary form
            provided that the copyright notice is retained (see licence for
            full details).</comments>
		</license>
	</licenses>
	<developers>
		<developer>
			<name>Guy Griffiths</name>
			<organization>Reading e-Science Centre, University of Reading, UK</organization>
			<organizationUrl>http://www.resc.reading.ac.uk</organizationUrl>
			<email>guy.griffiths@reading.ac.uk</email>
		</developer>
	</developers>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<mainClass>uk.ac.rdg.resc.VideoWall</mainClass>
						</manifest>
					</archive>
					<finalName>resc-multiglobe</finalName>
				</configuration>
			</plugin>
			<plugin>
				<!-- Sets the source version to 1.8 -->
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
				<version>3.1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<mavenExecutorId>forked-path</mavenExecutorId>
					<useReleaseProfile>true</useReleaseProfile>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- This is required for Java 8 until we make all javadoc W3C HTML 
						4.01 compliant -->
					<additionalparam>-Xdoclint:none</additionalparam>
				</configuration>
				<version>2.8.1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
				<version>2.2.1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
				<version>2.9</version>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<descriptors>
						<descriptor>src/assembly/assembly.xml</descriptor>
					</descriptors>
					<finalName>resc-multiglobe</finalName>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.1</version>
				<configuration>
					<mainClass>uk.ac.rdg.resc.VideoWall</mainClass>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<issueManagement>
		<system>Google Code</system>
		<url>https://bitbucket.org/GuyGriffiths/edal-multiglobe-desktop/issues</url>
	</issueManagement>
	<reporting>
		<plugins>
			<plugin>
				<!-- Create aggregated javadoc for all modules -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<goal>javadoc:aggregate</goal>
					<!-- These links really belong in the child POMs but if we put them 
						there, they don't seem to get picked up when building the javadoc for the 
						aggregated project. Therefore if the versions of any of the dependencies 
						change these links will also have to be updated. -->
					<links>
						<link>http://java.sun.com/j2se/1.6.0/docs/api/</link>
						<link>http://joda-time.sourceforge.net/api-2.0/</link>
						<link>http://www.geoapi.org/3.0/javadoc/</link>
					</links>
				</configuration>
				<version>2.9</version>
			</plugin>
			<plugin>
				<!-- This means that we only generate javadocs for the site -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.6</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>index</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>uk.ac.rdg.resc</groupId>
			<artifactId>edal-graphics</artifactId>
			<version>${edal-version}</version>
		</dependency>
		<dependency>
			<groupId>uk.ac.rdg.resc</groupId>
			<artifactId>edal-cdm</artifactId>
			<version>${edal-version}</version>
		</dependency>
		<dependency>
			<groupId>uk.ac.rdg.resc</groupId>
			<artifactId>ncWMS</artifactId>
			<version>2.0-SNAPSHOT</version>
			<classifier>classes</classifier>
		</dependency>
		<dependency>
			<groupId>gov.nasa</groupId>
			<artifactId>worldwind</artifactId>
			<version>2.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>gov.nasa</groupId>
			<artifactId>worldwindx</artifactId>
			<version>2.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
			<version>2.2.8-b01</version>
		</dependency>
	</dependencies>
	<scm>
		<connection>scm:hg:https://edal-java.googlecode.com/hg/</connection>
		<developerConnection>scm:hg:https://edal-java.googlecode.com/hg/</developerConnection>
		<url>http://code.google.com/p/edal-java/source/browse/</url>
	</scm>
	<repositories>
		<repository>
			<!-- This allows us to include local maven repos in each module to contain 
				dependencies which are not available through maven. We have only a single 
				example, in the graphics module. We could define it in the graphics pom.xml, 
				but that means that javadoc generation fails when we call it from this level. -->
			<id>libs</id>
			<name>Non-maven dependencies</name>
			<releases>
				<enabled>true</enabled>
				<checksumPolicy>ignore</checksumPolicy>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<url>file://${project.basedir}/lib</url>
		</repository>
		<repository>
			<id>edal-snapshots</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</repository>
	</repositories>

</project>
